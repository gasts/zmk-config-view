/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// LAYERS

#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUNC    3

&lt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB |  Q  |  W  |  E   |  R   |  T  |   |  Y  |  U   |  I   |  O  |  P  | DEL  |
            // | ESC |  A  |  S  |  D   |  F   |  G  |   |  H  |  J   |  K   |  L  |  ;  | CTRL |
            // | GUI |  Z  |  X  |  C   |  V   |  B  |   |  N  |  M   |  ,   |  .  |  /  | SHIFT|
            //                   | LALT | SHFT | SPC |   | ENT | BSPC | RALT |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E         &kp R    &kp T            &kp Z        &kp U     &kp I         &kp O          &kp P             &kp DEL
&kp ESC         &kp A  &kp S  &kp D         &kp F    &kp G            &kp H        &kp J     &kp K         &kp L          &kp LEFT_BRACKET  &kp LCTRL
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C         &kp V    &kp B            &kp N        &kp M     &kp KP_MINUS  &kp SEMICOLON  &kp SINGLE_QUOTE  &kp RSHFT
                              &kp LEFT_GUI  &kp TAB  &lt NUM SPACE    &lt SYM RET  &kp BSPC  &kp RG(RALT)
            >;
        };

        num_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB |  1  |  2   |  3   |  4    |  5   |   |  6   |  7    |  8     |  9    |  0    | DEL |
            // | ESC | INS | HOME | UP   | END   | PGUP |   | PLUS | MINUS |  ASTRK | SLASH | EQUAL | LCTRL |
            // | GUI | DEL | LEFT | DOWN | RIGHT | PGDN |   |   '  |       | COMMA  | DOT   |       | SHIFT  |
            //                    | LALT | SHFT | SPC |     | ENT  | BSPC  | RALT   |

            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)     &kp LS(NUMBER_3)   &kp LS(NUMBER_4)      &kp LS(NUMBER_5)    &kp LS(NUMBER_6)       &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)   &trans
&trans  &kp RA(Q)         &kp RA(SLASH)        &kp LESS_THAN      &kp GREATER_THAN      &kp HASH            &kp RIGHT_BRACKET      &kp QUESTION      &kp RA(NUMBER_8)  &kp RA(NUMBER_9)  &kp PIPE           &trans
&trans  &kp RA(E)         &kp RA(RIGHT_BRACE)  &kp LS(LESS_THAN)  &kp LA(GREATER_THAN)  &kp LS(QUESTION)    &kp LS(RIGHT_BRACKET)  &kp RA(MINUS)     &kp RA(NUMBER_7)  &kp RA(NUMBER_0)  &kp LS(BACKSLASH)  &trans
                                               &trans             &trans                &lt NUM SPACE       &lt SYM RET            &trans            &trans
            >;
        };

        sym_number {
            // -----------------------------------------------------------------------------------------
            // | TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // | ESC |     |     |     |     |     |   |  -  |  =  |  \  |  [  |  ]  |  `   |
            // | GUI |     |     |     |     |     |   |  _  |  +  | "|" |  {  |  }  |  ~   |
            //                   | LALT | SHFT | SPC |   | ENT | BSPC | RALT |

            bindings = <
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5     &kp NUMBER_6  &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans
&kp F1  &kp F2        &kp F3        &kp F4        &kp F5        &kp F6           &kp LEFT      &kp DOWN_ARROW  &kp UP        &kp RIGHT     &kp AT        &trans
&kp F7  &kp F8        &kp F9        &kp F10       &kp F11       &kp F12          &kp HOME      &kp PAGE_DOWN   &kp PAGE_UP   &kp END       &kp HASH      &trans
                                    &trans        &trans        &lt NUM SPACE    &lt SYM RET   &trans          &trans
            >;
        };

        func_layer {
            // -----------------------------------------------------------------------------------------
            // |       | Mute| Vol-| Vol+ |      |     |   | RESET| FLASH |     |     |     | C A Del |
            // | BTCrl | BT1 | BT2 | BT3  | BT4  | BT5 |   | F1   | F2    | F3  | F4  | F5  | F6      |
            // |       |     |     |      |      |     |   | F7   | F7    | F9  | F10 | F11 | F12     |
            //                     | LALT | SHFT | SPC |   | ENT | BSPC | RALT |

            bindings = <
&trans      &kp K_MUTE    &kp K_VOL_DN  &kp K_VOL_UP  &trans        &trans           &sys_reset   &bootloader  &trans  &trans   &trans   &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &kp F1       &kp F2       &kp F3  &kp F4   &kp F6   &kp F6
&trans      &trans        &trans        &trans        &trans        &trans           &kp F7       &kp F8       &kp F9  &kp F10  &kp F11  &kp F12
                                        &trans        &trans        &lt NUM SPACE    &lt SYM RET  &trans       &trans
            >;
        };
    };
};
